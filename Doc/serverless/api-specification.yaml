openapi: 3.0.3
info:
  title: 撮影スタジオ予約管理API
  description: 撮影スタジオ予約管理システムのAPI仕様書
  version: 1.0.0
  
servers:
  - url: https://api.studio-booking.example.com/api
    description: 本番環境
  - url: https://staging-api.studio-booking.example.com/api
    description: ステージング環境
  - url: http://localhost:3000/api
    description: ローカル開発環境

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          example: "INVALID_PARAMETER"
        message:
          type: string
          example: "リクエストパラメータが無効です"
        details:
          type: object
          example: {"field": "email", "reason": "invalid format"}
          
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          format: email
          example: "user@example.com"
        fullName:
          type: string
          example: "山田太郎"
        address:
          type: string
          example: "東京都渋谷区..."
        phone:
          type: string
          example: "090-1234-5678"
        isAdmin:
          type: boolean
          example: false
        totalUsageMinutes:
          type: integer
          example: 480
        bookingCount:
          type: integer
          example: 5
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          
    UserRegisterRequest:
      type: object
      required:
        - email
        - password
        - fullName
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          minLength: 8
        fullName:
          type: string
        address:
          type: string
        phone:
          type: string
          
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: integer
          example: 3600
        user:
          $ref: '#/components/schemas/User'
          
    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          
    PasswordResetRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          
    Booking:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, approved, rejected, cancelled]
        bookingType:
          type: string
          enum: [temporary, confirmed]
        purpose:
          type: string
        peopleCount:
          type: integer
          minimum: 1
        confirmationDeadline:
          type: string
          format: date-time
        options:
          type: array
          items:
            $ref: '#/components/schemas/BookingOption'
        cancellationFeePercent:
          type: integer
          minimum: 0
          maximum: 100
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          
    BookingOption:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          example: "LEDライト"
        quantity:
          type: integer
          example: 1
        price:
          type: number
          example: 1000
          
    CreateBookingRequest:
      type: object
      required:
        - startTime
        - endTime
        - bookingType
        - purpose
        - peopleCount
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        bookingType:
          type: string
          enum: [temporary, confirmed]
        purpose:
          type: string
        peopleCount:
          type: integer
          minimum: 1
        options:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              quantity:
                type: integer
                minimum: 1
                
    CalendarEntry:
      type: object
      properties:
        date:
          type: string
          format: date
        timeSlots:
          type: array
          items:
            type: object
            properties:
              startTime:
                type: string
                format: date-time
              endTime:
                type: string
                format: date-time
              status:
                type: string
                enum: [available, temporary, confirmed]
              bookingId:
                type: string
                
    Option:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        unitPrice:
          type: number
        unit:
          type: string
        isActive:
          type: boolean
          
    Notification:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        title:
          type: string
        content:
          type: string
        type:
          type: string
          enum: [booking, reminder, system, admin]
        isRead:
          type: boolean
        relatedEntityId:
          type: string
        createdAt:
          type: string
          format: date-time
        readAt:
          type: string
          format: date-time
          
    TermsOfService:
      type: object
      properties:
        version:
          type: string
        content:
          type: string
        effectiveDate:
          type: string
          format: date-time
          
    UserAgreement:
      type: object
      properties:
        userId:
          type: string
        termsVersion:
          type: string
        agreedAt:
          type: string
          format: date-time

    CalendarBooking:
      type: object
      description: カレンダー表示用に簡略化された予約情報
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        userName:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, approved, rejected, cancelled]
        bookingType:
          type: string
          enum: [temporary, confirmed]
        purpose:
          type: string
        photographerName:
          type: string
        createdAt:
          type: string
          format: date-time

    TimeSlot:
      type: object
      description: 10分単位の時間枠情報
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          type: string
          enum: [available, temporary_approved, confirmed, temporary_pending, confirmed_pending, occupied]
          description: |
            - available: 空き
            - temporary_approved: 承認済み仮予約
            - confirmed: 本予約
            - temporary_pending: 承認待ち仮予約
            - confirmed_pending: 承認待ち本予約
            - occupied: その他予約済み
        booking:
          $ref: '#/components/schemas/CalendarBooking'
          nullable: true

    CalendarEvent:
      type: object
      description: FullCalendar.js互換のイベントデータ
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: "山田太郎 - 商品撮影"
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        backgroundColor:
          type: string
          description: イベントの背景色（Tailwind CSS色コード）
          example: "#3B82F6"
        borderColor:
          type: string
          description: イベントの枠線色（Tailwind CSS色コード）
          example: "#2563EB"
        textColor:
          type: string
          description: イベントのテキスト色
          example: "#FFFFFF"
        extendedProps:
          type: object
          description: 追加のイベント情報
          properties:
            userId:
              type: string
              format: uuid
            userName:
              type: string
            status:
              type: string
              enum: [pending, approved, rejected, cancelled]
            bookingType:
              type: string
              enum: [temporary, confirmed]
            purpose:
              type: string
            photographerName:
              type: string
            createdAt:
              type: string
              format: date-time
          
paths:
  /auth/register:
    post:
      summary: ユーザー登録
      description: 新規ユーザーを登録します
      operationId: registerUser
      tags:
        - 認証
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        '201':
          description: 登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: メールアドレスが既に使用されています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /auth/login:
    post:
      summary: ログイン
      description: ユーザー認証とトークン発行
      operationId: loginUser
      tags:
        - 認証
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: 認証失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /auth/logout:
    post:
      summary: ログアウト
      description: ユーザーをログアウトさせ、トークンを無効化します
      operationId: logoutUser
      tags:
        - 認証
      security:
        - BearerAuth: []
      responses:
        '204':
          description: ログアウト成功
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /auth/refresh:
    post:
      summary: トークン更新
      description: リフレッシュトークンを使用して新しいアクセストークンを発行します
      operationId: refreshToken
      tags:
        - 認証
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: トークン更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: 無効なリフレッシュトークン
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /auth/password/reset:
    post:
      summary: パスワードリセット
      description: パスワードリセットのメールを送信します
      operationId: resetPassword
      tags:
        - 認証
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      responses:
        '202':
          description: リセットメール送信成功
        '404':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /users/me:
    get:
      summary: 自分のプロフィール取得
      description: ログインユーザー自身のプロフィール情報を取得します
      operationId: getCurrentUser
      tags:
        - ユーザー
      security:
        - BearerAuth: []
      responses:
        '200':
          description: プロフィール取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    put:
      summary: 自分のプロフィール更新
      description: ログインユーザー自身のプロフィール情報を更新します
      operationId: updateCurrentUser
      tags:
        - ユーザー
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                address:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: プロフィール更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /users/{id}:
    get:
      summary: ユーザー情報取得
      description: 指定したユーザーの情報を取得します（管理者限定）
      operationId: getUserById
      tags:
        - ユーザー
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /users:
    get:
      summary: ユーザー一覧取得
      description: ユーザー一覧を取得します（管理者限定）
      operationId: listUsers
      tags:
        - ユーザー
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
      responses:
        '200':
          description: ユーザー一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /bookings:
    get:
      summary: 予約一覧取得
      description: ログインユーザーの予約一覧を取得します
      operationId: listBookings
      tags:
        - 予約
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, approved, rejected, cancelled]
        - name: from
          in: query
          schema:
            type: string
            format: date
        - name: to
          in: query
          schema:
            type: string
            format: date
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
      responses:
        '200':
          description: 予約一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Booking'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    post:
      summary: 新規予約申請
      description: 新しい予約を申請します
      operationId: createBooking
      tags:
        - 予約
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookingRequest'
      responses:
        '201':
          description: 予約申請成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '400':
          description: バリデーションエラーまたは時間枠が既に予約されています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /bookings/{id}:
    get:
      summary: 予約詳細取得
      description: 予約の詳細情報を取得します
      operationId: getBookingById
      tags:
        - 予約
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 予約詳細取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 予約が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    put:
      summary: 予約更新
      description: 予約内容を更新します（承認前のみ）
      operationId: updateBooking
      tags:
        - 予約
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookingRequest'
      responses:
        '200':
          description: 予約更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '400':
          description: バリデーションエラーまたは予約を更新できない状態です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 予約が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    delete:
      summary: 予約キャンセル
      description: 予約をキャンセルします
      operationId: cancelBooking
      tags:
        - 予約
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: キャンセル成功（キャンセル料情報を含む）
          content:
            application/json:
              schema:
                type: object
                properties:
                  cancellationFeePercent:
                    type: integer
                    description: キャンセル料率（%）
                  booking:
                    $ref: '#/components/schemas/Booking'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 予約が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /bookings/{id}/confirm:
    post:
      summary: 仮予約から本予約への変更
      description: 仮予約から本予約に変更します
      operationId: confirmTemporaryBooking
      tags:
        - 予約
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 本予約への変更成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '400':
          description: 仮予約ではないか、既に本予約になっています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 予約が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /bookings/{id}/approve:
    post:
      summary: 予約承認
      description: 予約を承認します（管理者限定）
      operationId: approveBooking
      tags:
        - 予約
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 予約承認成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 予約が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /bookings/{id}/reject:
    post:
      summary: 予約拒否
      description: 予約を拒否します（管理者限定）
      operationId: rejectBooking
      tags:
        - 予約
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: 拒否理由
      responses:
        '200':
          description: 予約拒否成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 予約が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /calendar/month/{year}/{month}:
    get:
      summary: 月間カレンダー表示用データ取得
      description: 指定月の予約統計と日別データを取得します
      operationId: getMonthlyCalendar
      tags:
        - カレンダー
      security:
        - BearerAuth: []
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 2023
        - name: month
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 12
      responses:
        '200':
          description: 月間カレンダーデータ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  year:
                    type: integer
                  month:
                    type: integer
                  dailyStats:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        totalBookings:
                          type: integer
                        pendingBookings:
                          type: integer
                        approvedBookings:
                          type: integer
                        temporaryBookings:
                          type: integer
                        confirmedBookings:
                          type: integer
                  totalBookings:
                    type: integer
                  bookings:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendarBooking'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /calendar/week/{year}/{week}:
    get:
      summary: 週間カレンダー表示用データ取得
      description: 指定週の詳細予約情報を取得します
      operationId: getWeeklyCalendar
      tags:
        - カレンダー
      security:
        - BearerAuth: []
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 2023
        - name: week
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 53
      responses:
        '200':
          description: 週間カレンダーデータ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  year:
                    type: integer
                  week:
                    type: integer
                  startDate:
                    type: string
                    format: date
                  endDate:
                    type: string
                    format: date
                  dailyDetails:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        timeSlots:
                          type: array
                          items:
                            $ref: '#/components/schemas/TimeSlot'
                        bookings:
                          type: array
                          items:
                            $ref: '#/components/schemas/CalendarBooking'
                        totalSlots:
                          type: integer
                        bookedSlots:
                          type: integer
                  totalBookings:
                    type: integer
                  bookings:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendarBooking'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /calendar/day/{year}/{month}/{day}:
    get:
      summary: 日間カレンダー表示用データ取得
      description: 指定日の10分単位時間枠別予約状況を取得します
      operationId: getDailyCalendar
      tags:
        - カレンダー
      security:
        - BearerAuth: []
      parameters:
        - name: year
          in: path
          required: true
          schema:
            type: integer
            minimum: 2023
        - name: month
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 12
        - name: day
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 31
      responses:
        '200':
          description: 日間カレンダーデータ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  timeSlots:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimeSlot'
                  bookings:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendarBooking'
                  totalSlots:
                    type: integer
                  bookedSlots:
                    type: integer
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /calendar/events:
    get:
      summary: カレンダーイベント形式でのデータ取得
      description: FullCalendar.js互換のイベントデータを取得します
      operationId: getCalendarEvents
      tags:
        - カレンダー
      security:
        - BearerAuth: []
      parameters:
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: カレンダーイベントデータ取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendarEvent'
                  total:
                    type: integer
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /calendar:
    get:
      summary: 予約カレンダーデータ取得（レガシー）
      description: 予約カレンダーの表示用データを取得します（廃止予定）
      operationId: getCalendarData
      tags:
        - カレンダー
      security:
        - BearerAuth: []
      parameters:
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: カレンダーデータ取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalendarEntry'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /calendar/available-slots:
    get:
      summary: 空き枠取得
      description: 指定した日付範囲の空き枠を取得します
      operationId: getAvailableSlots
      tags:
        - カレンダー
      security:
        - BearerAuth: []
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 空き枠取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    startTime:
                      type: string
                      format: date-time
                    endTime:
                      type: string
                      format: date-time
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /options:
    get:
      summary: オプション一覧取得
      description: 利用可能なオプション一覧を取得します
      operationId: listOptions
      tags:
        - オプション
      security:
        - BearerAuth: []
      responses:
        '200':
          description: オプション一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Option'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /options/{id}:
    get:
      summary: オプション詳細取得
      description: オプションの詳細情報を取得します
      operationId: getOptionById
      tags:
        - オプション
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: オプション詳細取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: オプションが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /notifications:
    get:
      summary: 通知一覧取得
      description: ログインユーザーの通知一覧を取得します
      operationId: listNotifications
      tags:
        - 通知
      security:
        - BearerAuth: []
      parameters:
        - name: isRead
          in: query
          schema:
            type: boolean
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
      responses:
        '200':
          description: 通知一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    post:
      summary: 通知送信
      description: 通知を送信します（管理者限定）
      operationId: sendNotification
      tags:
        - 通知
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
